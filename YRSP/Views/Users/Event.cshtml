@model YRSP.Models.User

@{
    ViewBag.Title = "Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Bundles/fullcalendarcss")
@Scripts.Render("~/Bundles/fullcalendar")

<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.1/dist/jquery.validate.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.js"></script>

<!--background image-->
<style>
    .tooltip-inner {
        background-color: white;
        color: black;
        border: 1px solid black;
    }
</style>
<div class="container-fluid" style="height: 200px;
        background-image: url('../../Images/event.jpg');
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;">
    <div class="content">

    </div>
</div>

<div class="row text-center" style="margin-top: 10px; margin-bottom: 10px;">
    <div class="col-md-3 col-sm-6">
        <label for="location">Location:</label>
        <select id="location-top">
            <option value="All">All</option>
        </select>
    </div>
    <div class="col-md-3 col-sm-6">
        <label for="category">Category:</label>
        <select id="category-top">
            <option value="All">All</option>
        </select>
    </div>
    <div class="col-md-3 col-sm-6">
        <label for="price">Price:</label>
        <select id="price-top">
            <option value="All">All</option>
            <option value="Yes">Free</option>
            <option value="No">Not Free</option>
        </select>
    </div>
    <div class="col-md-3 col-sm-6"><button class="choosebutton" onclick="getEventsTop()">Filter Events</button></div>
</div>


<!--calendar element-->
<div class="container">
    <div id='calendar'></div>
</div>
<script src="https://unpkg.com/popper.js"></script>
<script src="https://unpkg.com/tooltip.js@1.3.2/dist/umd/tooltip.min.js"></script>
<script src="~/Static/events.js"></script>
<script>
    let locations = new Set(events.events.map(i => i.location));
    let categories = new Set(events.events.map(i => i.category));
    for (let location of locations) {
        $('#location-top').append(new Option(location, location));
    }
    for (let category of categories) {
        $('#category-top').append(new Option(category, category));
    }

    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');

        var calendar = new FullCalendar.Calendar(calendarEl, {
            plugins: ['dayGrid', 'list'],
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,dayGridWeek,dayGridDay,list'
            },
            events: events.events,
            eventRender: function (info) {
                let atitle;
                const now = new Date();
                const eventDate = new Date(info.event.start);
                if (eventDate < now) {
                    atitle = `<img class="img-responsive" src="${info.event.extendedProps.img}"/>` + `<br><h3>Expired</h3>`;
                } else {
                    atitle = `<div><img class="img-responsive" src="${info.event.extendedProps.img}"/>` + info.event.extendedProps.description + `<br><a class="btn btn-primary" href="${info.event.extendedProps.link}" target="_blank">Detail</a></div>`;
                }
                var tooltip = new Tooltip(info.el, {
                    title: atitle,
                    placement: 'top',
                    trigger: 'click focus',
                    container: 'body',
                    html: true,
                    closeOnClickOutside: true
                });
            }

        });

        console.log(calendar);

        calendar.render();
    });

</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="container">
    <div class="form-horizontal">
        <h4 class="text-center">Subscribe to recieve new events every week</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.user_email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.user_email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user_email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.user_first_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.user_first_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user_first_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.user_last_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.user_last_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user_last_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.user_address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.user_address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user_address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.user_phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.user_phone_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user_phone_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Subscribe" class="btn btn-default" />
            </div>
        </div>
    </div>
</div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
}
